#============================================================================
# 项目配置 端口与路径
#============================================================================
server.port=9999
server.servlet.context-path=/house
#============================================================================
# Mybatis Plus 配置
#============================================================================
mybatis-plus.configuration.map-underscore-to-camel-case=true
#mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.mapper-locations=classpath:mapper/*Mapper.xml
mybatis-plus.global-config.db-config.logic-not-delete-value=0
mybatis-plus.global-config.db-config.logic-delete-value=1
#============================================================================
# 监控配置
# /actuator/health  /actuator/info
#============================================================================
management.endpoints.web.exposure.include=*
#============================================================================
# 日志配置
#============================================================================
# mybatis-plus修改日志只打印SQL语句不打印查询结果
logging.level.com.house.mapper=DEBUG
# logging.file.path=logs
# 通过 logging.file.path 生成的日志文件名字为 spring.log，
# 如果需要自定义文件名字，则通过 logging.file.name 属性进行配置
# 此时不需要再配置 logging.file.path
logging.file.name=logs/spring.log
#logging.config=classpath:logback-spring.xml
# 日志文件大小
logging.logback.rollingpolicy.max-file-size=10MB
# 保留的日志时间
logging.logback.rollingpolicy.max-history=10
# 修改在控制台输出的日志格式
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %clr(%5p) [%thread] %clr(%logger{45}){cyan} : %msg%n
# 修改输出到文件的日志格式
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger : %msg%n
# 自定义swagger配置
springdoc.packagesToScan=com.house
# 设置循环依赖
spring.main.allow-circular-references=true
#============================================================================
# 文件上传配置
#============================================================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.enabled=true
#============================================================================
# Java Web Token 配置
#============================================================================
jwt.tokenHeader=Authorization
jwt.secret=office-secret
jwt.expiration=604800000
jwt.tokenHead=Bearer

